From SRS0=s4sW=IX=amazon.com=prvs=73518ea15=surajjs@kernel.org Sat Jan 13 01:55:37 2024
From: Suraj Jitindar Singh <surajjs@amazon.com>
Date: Fri, 12 Jan 2024 16:53:05 -0800
Subject: net: add a route cache full diagnostic message
To: <stable@vger.kernel.org>
Cc: <gregkh@linuxfoundation.org>, <trawets@amazon.com>, <security@kernel.org>, Peter Oskolkov <posk@google.com>, "David S . Miller" <davem@davemloft.net>, Suraj Jitindar Singh <surajjs@amazon.com>
Message-ID: <20240113005308.2422331-1-surajjs@amazon.com>

From: Peter Oskolkov <posk@google.com>

commit 22c2ad616b74f3de2256b242572ab449d031d941 upstream.

In some testing scenarios, dst/route cache can fill up so quickly
that even an explicit GC call occasionally fails to clean it up. This leads
to sporadically failing calls to dst_alloc and "network unreachable" errors
to the user, which is confusing.

This patch adds a diagnostic message to make the cause of the failure
easier to determine.

Signed-off-by: Peter Oskolkov <posk@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Suraj Jitindar Singh <surajjs@amazon.com>
Cc: <stable@vger.kernel.org> # 4.19.x
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 net/core/dst.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

--- a/net/core/dst.c
+++ b/net/core/dst.c
@@ -98,8 +98,12 @@ void *dst_alloc(struct dst_ops *ops, str
 	struct dst_entry *dst;
 
 	if (ops->gc && dst_entries_get_fast(ops) > ops->gc_thresh) {
-		if (ops->gc(ops))
+		if (ops->gc(ops)) {
+			printk_ratelimited(KERN_NOTICE "Route cache is full: "
+					   "consider increasing sysctl "
+					   "net.ipv[4|6].route.max_size.\n");
 			return NULL;
+		}
 	}
 
 	dst = kmem_cache_alloc(ops->kmem_cachep, GFP_ATOMIC);
