From stable-bounces@linux.kernel.org  Wed Apr 16 16:27:25 2008
From: Trond Myklebust <Trond.Myklebust@netapp.com>
To: stable@kernel.org
Date: Tue, 08 Apr 2008 21:15:33 -0400
Message-ID: <20080409011532.22409.87741.stgit@c-69-242-210-120.hsd1.mi.comcast.net>
Cc: Chuck Lever <chuck.lever@oracle.com>
Subject: SUNRPC: Fix a memory leak in rpc_create()

From: Chuck Lever <chuck.lever@oracle.com>

upstream commit: ed13c27e546667fb0967ae30f5070cd7f6455f90

Commit 510deb0d was supposed to move the xprt_create_transport() call in
rpc_create(), but neglected to remove the old call site.  This resulted in
a transport leak after every rpc_create() call.

This leak is present in 2.6.24 and 2.6.25.

Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
Signed-off-by: Chris Wright <chrisw@sous-sol.org>
---

 net/sunrpc/clnt.c |    4 ----
 1 file changed, 4 deletions(-)

--- a/net/sunrpc/clnt.c
+++ b/net/sunrpc/clnt.c
@@ -249,10 +249,6 @@ struct rpc_clnt *rpc_create(struct rpc_c
 	};
 	char servername[20];
 
-	xprt = xprt_create_transport(&xprtargs);
-	if (IS_ERR(xprt))
-		return (struct rpc_clnt *)xprt;
-
 	/*
 	 * If the caller chooses not to specify a hostname, whip
 	 * up a string representation of the passed-in address.
