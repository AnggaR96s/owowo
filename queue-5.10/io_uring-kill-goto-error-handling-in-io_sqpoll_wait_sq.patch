From foo@baz Wed Nov 16 09:43:39 AM CET 2022
Date: Wed, 16 Nov 2022 09:43:39 +0100
To: Greg KH <gregkh@linuxfoundation.org>
From: Jens Axboe <axboe@kernel.dk>
Subject: io_uring: kill goto error handling in io_sqpoll_wait_sq()

From: Jens Axboe <axboe@kernel.dk>

Hunk extracted from commit 70aacfe66136809d7f080f89c492c278298719f4
upstream.

If the sqpoll thread has died, the out condition doesn't remove the
waiting task from the waitqueue. The goto and check are not needed, just
make it a break condition after setting the error value. That ensures
that we always remove ourselves from sqo_sq_wait waitqueue.

Reported-by: Xingyuan Mo <hdthky0@gmail.com>
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 fs/io_uring.c |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

--- a/fs/io_uring.c
+++ b/fs/io_uring.c
@@ -9038,7 +9038,7 @@ static int io_sqpoll_wait_sq(struct io_r
 
 		if (unlikely(ctx->sqo_dead)) {
 			ret = -EOWNERDEAD;
-			goto out;
+			break;
 		}
 
 		if (!io_sqring_full(ctx))
@@ -9048,7 +9048,6 @@ static int io_sqpoll_wait_sq(struct io_r
 	} while (!signal_pending(current));
 
 	finish_wait(&ctx->sqo_sq_wait, &wait);
-out:
 	return ret;
 }
 
